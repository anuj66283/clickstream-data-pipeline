version: '3.9'

services:

  generator:
    build:
      context: src
      dockerfile: Dockerfile
    volumes:
      - ./src:/code
    ports: 
      - "8000:8000"
    networks:
      - forapi

  broker:
    image: docker.io/bitnami/kafka:3.7
    ports:
      - "9092:9092"
      - "29092:29092"
    volumes:
      - "kafka_data:/bitnami"
    env_file: .env
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@broker:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,INTERNAL://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://${BROKER},INTERNAL://broker:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      - ALLOW_PLAINTEXT_LISTENER=yes
      - BITNAMI_DEBUG=yes
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions.sh", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - forapi

  kafka-custom:
    build:
      context: ./kafka
      dockerfile: Dockerfile
    volumes:
      - ./kafka:/code
    env_file: .env
    depends_on: 
      broker:
        condition: service_healthy
    command: python3 main.py
    networks:
      - forapi  

volumes:
  kafka_data:
    driver: local

networks:
  forapi:
    driver: bridge